---
- hosts: awx
  vars:
    pptx_filename: "/tmp/fwac.pptx"
    collection: coll3
    
    reason_image_file: "/tmp/reason_cloud.png"
    reason_mask_file: "/tmp/reason_mask.png" 
    reason_negative_file: "/tmp/reason_negate.png"   
    reason_cloud_file: "/tmp/reasons.png"      
    reason_word_file: "/tmp/reason_word.txt"
    challenge_image_file: "/tmp/challenge_cloud.png"
    challenge_cloud_file: "/tmp/challenges.png"  
    challenge_word_file: "/tmp/challenge_word.txt"
  tasks:
  - name: RESTHeart PUT collection
    uri:
      url: "http://{{restheart}}/db/{{ collection }}"
      method: PUT
      status_code: "201,200"
    
  - name: RESTHeart for collections
    uri:
      url: "http://{{restheart}}/db/{{ collection }}"
      return_content: yes
    register: documents

  # set variables with all the answers together. the code in the module will
  # tally the answers to create the charts. Needs to provide a list
  - set_fact:
      currently_yes: "{{ currently|default(0)|int + item.currently_ss|bool|int }}" #
      currently: "{{ currently|default([]) + [item.currently_ss] }}" #
      inops_yes: "{{ inops|default(0)|int + item.inops_ss|bool|int }}" #
      inops: "{{ inops|default([]) + [item.inops_ss] }}" #
      challenge_cloud: "{{ challenge_cloud|default('') }} {{ item.challenge_cloud_text }}" #
      club: "{{ club|default([]) + item.club_ms }}" #
      emails: "{{ emails|default([]) + [item.email_text] }}"
      meetings: "{{ meetings|default([]) + [item.meetings_ss] }}" #
      reason_cloud: "{{ reason_cloud|default('') }} {{ item.reason_cloud_text  }}" #
      role: "{{ role|default([]) + [item.role_ss] }}" #
      topic: "{{ topic|default([]) + [item.topic_text] }}"
      tower: "{{ tower|default([]) + item.tower_ms }}" #
      total: "{{ total|default('1')|int + '1'|int }}"
    with_items: "{{documents.json._embedded}}"
    
  - debug: 
      var: currently
      verbosity: 2
  - debug: 
      var: inops
      verbosity: 2
  - debug: 
      var: challenge_cloud
      verbosity: 2
  - debug: 
      var: club
      verbosity: 2
  - debug: 
      var: emails
      verbosity: 2
  - debug: 
      var: meetings
      verbosity: 2
  - debug: 
      var: reason_cloud
      verbosity: 2
  - debug: 
      var: role
      verbosity: 2
  - debug: 
      var: topic
      verbosity: 2
  - debug: 
      var: tower
      verbosity: 2
  - debug: 
      var: total
      verbosity: 2
    
  - name: Create PPTX with Title page
    pptx_create: 
      filename: "{{ pptx_filename }}"
      title: "Ansible Club"
      subtitle: "This is what you want to do"

  - name: Pie chart of why we clubbing
    pptx_chart:
      title: "What we want from Ansible Club"
      filename: "{{ pptx_filename }}"
      categories: "{{ club|unique|list }}"
      series_values: "{{ club }}"
      series_name: "Reasons we are here"
      chart_type: "pie"

  - name: Who we are 
    pptx_chart:
      title: "Who we are"
      filename: "{{ pptx_filename }}"
      categories: "{{ role|unique|list }}"
      series_values: "{{ role }}"
      series_name: "Who we are"
      chart_type: "pie"
     
  - name: Who uses Ansible Bar Chart
    pptx_chart:
      title: "Who uses Ansible?"
      filename: "{{ pptx_filename }}"
      categories: "{{ currently|unique|list }}"
      series_name: "Use Ansible"
      series_values: "{{ currently }}"
      chart_type: "bar"

  - name: Who uses Ansible in Ops Bar Chart
    pptx_chart:
      title: "Who uses Ansible in Ops?"
      filename: "{{ pptx_filename }}"
      categories: "{{ inops|unique|list }}"
      series_name: "Use Ansible"
      series_values: "{{ inops }}"
      chart_type: "bar"

  - name: Pie chart of Ansible use
    pptx_chart:
      title: "How we use Ansible"
      filename: "{{ pptx_filename }}"
      categories: ['Total','Using Ansible','Ops']
      series_values: ['{{ total }}','{{ currently_yes }}','{{ inops_yes }}']
      series_build: False
      series_name: "Ansible Use"
      chart_type: "pie"
      
  - name: Who uses Tower vs Engine
    pptx_chart:
      title: "Breakdown of how we use Ansible"
      filename: "{{ pptx_filename }}"
      categories: "{{ tower|unique|list }}"
      series_name: "Tower vs Engine"
      series_values: "{{ tower }}"
      chart_type: "bar"
      
  - name: How ofter we meet
    pptx_chart:
      title: "How often we want to meet"
      filename: "{{ pptx_filename }}"
      categories: "{{ meetings|unique|list }}"
      series_name: "Meeting interval"
      series_values: "{{ meetings }}"
      chart_type: "bar"

  - name: Copy cloud files to remote
    copy: src={{ item.src }} dest={{ item.dest }}
    with_items:
      - { src: '{{ reason_negative_file|basename }}', dest: '{{ reason_negative_file }}' }
      - { src: '{{ reason_mask_file|basename }}', dest: '{{ reason_mask_file }}' }
      
  # reason cloud ===================================================     
  - name: Create word file for reason cloud
    copy:
      dest: "{{ reason_word_file }}"
      content:  "{{ reason_cloud }}"
      
  - name: Create reason cloud
    command: "wordcloud_cli --text {{ reason_word_file }} --mask {{ reason_mask_file }} --background black --contour_color white --imagefile {{ reason_image_file }}"  
      
  - name: Merge files with Magick
    command: "convert {{ reason_mask_file }} {{ reason_image_file }} {{ reason_negative_file }} -composite {{ reason_cloud_file }}"
      
  - name: Put reason_cloud up on S3
    aws_s3:
      bucket: s3.fwac.us
      object: "/images/{{ reason_cloud_file | basename }}"
      src: "{{ reason_cloud_file }}"
      mode: put
      permission: public-read
      
  - name: Add reason_cloud to pptx
    pptx_image:
      title: "Why we love Ansible <3"
      image: "{{ reason_cloud_file }}"
      filename: "{{ pptx_filename }}"
      
  #challenge cloud =================================================
  - name: Create word file for challenge cloud
    copy:
      dest: "{{ challenge_word_file }}"
      content:  "{{ challenge_cloud }}"
      
  - name: Create challenge cloud
    command: "wordcloud_cli --text {{ challenge_word_file }} --width 600 --height 400  --background white --imagefile {{ challenge_image_file }}"
      
  - name: Put challenge_cloud up on S3
    aws_s3:
      bucket: s3.fwac.us
      object: "/images/{{ challenge_image_file| basename }}"
      src: "{{ challenge_image_file }}"
      mode: put
      permission: public-read
      
  - name: Add challenge_cloud to pptx
    pptx_image:
      title: "Challenges we face"
      image: "{{ challenge_image_file }}"
      filename: "{{ pptx_filename }}"
      
 # add topics   
  - name: Topics for discussion
    pptx_bullet:
      title: "Discussion"
      filename: "{{ pptx_filename }}"
      bullets: "{{ topic }}"
    when: "topic|length > 0"

  # put it all up on S3    
  - name: Put slides up on S3
    aws_s3:
      bucket: s3.fwac.us
      object: "/slides/{{ pptx_filename | basename }}"
      src: "{{ pptx_filename }}"
      mode: put
      permission: public-read

  - name: Make index.html for S3 
    template:
        src: index.html.j2
        dest: /tmp/index.html

  - name: Put index up on S3
    aws_s3:
      bucket: s3.fwac.us
      object: "/index.html"
      src: "/tmp/index.html"
      mode: "put"
      permission: public-read    

  - name: Email Slides to attendees
    mail:
      host: smtp.gmail.com
      port: 587
      username: "{{ email_from }}"
      password: "{{ email_passwd }}"
      to: "{{ emails }}"
      subject: FWAC Meeting Slides
      from: scott.ctr.tully@faa.gov
      body: Slides attached
      attach:
        - "{{ pptx_filename }}"
      headers:
        - Reply-To=scott.ctr.tully@faa.gov
    when: "email_passwd is defined and emails is defined"
 
  - name: Update fwac.github.io
    git:
      repo: git@github.com:fwac/fwac.github.io.git
      dest: /home/ec2-user/fwac.github.io
      update: yes
      force: yes
      version: master 

  - name: Get list off slides from s3
    aws_s3:
      bucket: s3.fwac.us
      prefix: slides/
      mode: list
    register: slides
    
  - name: Make Update README 
    template:
        src: README.md.j2
        dest: /home/ec2-user/fwac.github.io/README.md
        
  - name: Push README
    shell: "cd /home/ec2-user/fwac.github.io && /home/ec2-user/bin/push"  
      
 
#local_action: "command gdrive upload --parent 1Ua_JEkk2GQh8KyiYchwpJWe5Bcob9T_E --mime application/vnd.openxmlformats-officedocument.presentationml.presentation --delete {{ filename }}"
